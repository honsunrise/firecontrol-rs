<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated />
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2bee83cc-2d03-49de-bf87-c8b39994d94e" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/print.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/queue.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/utils.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/stm32g4x.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.cargo/config" beforeDir="false" afterPath="$PROJECT_DIR$/.cargo/config" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dictionaries/zhsyourai.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dictionaries/zhsyourai.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/memory.x" beforeDir="false" afterPath="$PROJECT_DIR$/memory.x" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/openocd.cfg" beforeDir="false" afterPath="$PROJECT_DIR$/openocd.cfg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/openocd.gdb" beforeDir="false" afterPath="$PROJECT_DIR$/openocd.gdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fsm.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/fsm.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/peripherals.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/peripherals.rs" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="BeRIoXBE" />
  </component>
  <component name="ProjectId" id="1U0Lqb58o82LOJpHiSp2k6fYGvf" />
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="org.rust.cargo.project.model.PROJECT_DISCOVERY" value="true" />
    <property name="settings.editor.selected.configurable" value="configurable.group.language" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Cargo Command.build">
    <configuration name="Expand firecontrol_rs::fsm" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="channel" value="DEFAULT" />
      <option name="command" value="expand --bin firecontrol-rs --color=always --theme=GitHub --tests fsm" />
      <option name="allFeatures" value="false" />
      <option name="nocapture" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="backtrace" value="SHORT" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test fsm::machine::tests::test_machine_parse_and_to_tokens" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="channel" value="DEFAULT" />
      <option name="command" value="test --package fsm-rs --lib fsm::machine::tests::test_machine_parse_and_to_tokens -- --exact" />
      <option name="allFeatures" value="false" />
      <option name="nocapture" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="backtrace" value="SHORT" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="build" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="channel" value="DEFAULT" />
      <option name="command" value="build --package firecontrol-rs --bin firecontrol-rs --release" />
      <option name="allFeatures" value="false" />
      <option name="nocapture" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="backtrace" value="SHORT" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="run" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="channel" value="DEFAULT" />
      <option name="command" value="run --package firecontrol-rs --bin firecontrol-rs" />
      <option name="allFeatures" value="false" />
      <option name="nocapture" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="backtrace" value="SHORT" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Cargo Command.build" />
      <item itemvalue="Cargo Command.run" />
      <item itemvalue="Cargo Command.Expand firecontrol_rs::fsm" />
      <item itemvalue="Cargo Command.Test fsm::machine::tests::test_machine_parse_and_to_tokens" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo Command.Test fsm::machine::tests::test_machine_parse_and_to_tokens" />
        <item itemvalue="Cargo Command.Expand firecontrol_rs::fsm" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
    <option name="version" value="2" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2bee83cc-2d03-49de-bf87-c8b39994d94e" name="Default Changelist" comment="" />
      <created>1574488757949</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1574488757949</updated>
      <workItem from="1574488761153" duration="26767000" />
      <workItem from="1574762669933" duration="541000" />
      <workItem from="1575047987295" duration="95000" />
      <workItem from="1575048094595" duration="6165000" />
      <workItem from="1575389539119" duration="239000" />
      <workItem from="1575389796108" duration="48610000" />
    </task>
    <task id="LOCAL-00001" summary="First commit">
      <created>1575908338318</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1575908338318</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="First commit" />
    <option name="LAST_COMMIT_MESSAGE" value="First commit" />
  </component>
</project>